"""
Memoization 피보나치 수열

ex ) 재귀 호출을 작성할 수 있는 함수   - 피보나치 수열을 구하는 함수

1. 0과 1로 시작하고 이전의 두 수 합을 다음 항으로 하는 수열
=> 0, 1, 1, 2, 3, 5, 8, 13...

2. 피보나치 수열의 i번 째 값을 계산하는 함수 F를 정의하면 다음고 같다
=> F0 = 0, F1 = 1
   Fi = Fi-1 + Fi-2 for i >=2

3. 위의 정의로부터 피보나치 수열의 i번째 항을 반환하는 함수를 재귀 함수로 구현할 수 있다
"""

# 피보나치 수열을 구하는 함수의 알고리즘 -> 엄청난 중복 호출이 존재하는 문제가 있다

def fibo(n) :
    if n < 2 :
        return n
    else :
        return fibo(n-1) + fibo(n-2)

# Memoization의 의미 : 컴퓨터 프로그램을 실행할 때 이전에 계산한 값을 메모리에 저장해 다시 계산하지 않도록 하여 전체적인 실행속도를 빠르게 하는 기술
# DP(동적프로그래밍)의 핵심이 되는 기술

# Memoization 방법을 적용한 할고리즘

# memo를 위한 리스트 생성
# memo[0]을 0으로 memo[1]는 1로 초기화한다

def fibo1(n) : 
    global memo
    if n >= 2 and len(memo) <= n :
        memo.append(fibo1(n-1) + fibo1(n-2))
    return memo[n]

memo = [0,1]

# 위의 알고리즘은 기존에 계산하여 저장된 값이 있을 경우 다시 계산하지 않겠다는 알고리즘 이다.